<!DOCTYPE html>
<html>
  <head>
    <title>jQuery UK</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <style type="text/css">
      h1, h2, h3 {
        font-family: 'Yanone Kaffeesatz';
        font-weight: normal;
      }
      body{
        font-family:'Yanone Kaffeesatz';
      }
      .remark-slide-content p, .remark-slide-content li{
        font-size:40px;
      }
      .remark-slide-content h1{
        font-size:80px;
      }
      .inverse {
        background: #272822;
        color: #777872;
        text-shadow: 0 0 20px #333;
      }
      .inverse h1, .inverse h2 {
        color: #f3f3f3;
        line-height: 1.2em;
      }
      .inverse h3{
        color:pink;
      }
      .emoji{
        width:100px;
        display:inline;
      }
      #output{
        text-align:center;
        margin-top:150px
      }
      img{
        display:block;
        margin:0 auto;
      }
      img.fit {
        height: 550px;
      }
      img.fith {
        height: 500px;
        margin-top: -80px;
      }
      .bio{
        margin-top:100px;
      }
      .bio img{
        margin:0 100px 0 0;
        float:left;
      }
      .bio li{
        padding-left:45px;
        list-style:none;
      }
      li{
        line-height:60px
      }
      iframe{
        font-size:10px
      }
    </style>
  </head>
  <body>
    <textarea id="source">
name: inverse
layout: true
class: center, middle, inverse
---
# jQuery UK
### 16 May 2014
---
layout: false

<div class='bio'>
  <img src="/images/andrew.png" />
  <h1>Andrew Nesbitt</h1>
  <ul>
    <li>Bath, UK</li>
    <li>@teabass</li>
    <li>GitHub</li>
  </ul>
</div>
---
<div class='bio'>
  <img src="/images/francis.png" />
  <h1>Francis Gulotta</h1>
  <ul>
    <li>New York City, USA</li>
    <li>@reconbot</li>
    <li>Wizard Development</li>
  </ul>
</div>
---
template: inverse
# Hardware Hacking with JavaScript
---
# Hardware Hacking?
---
# Hardware Hacking?
* Combining electronics and physical components with code
---
# Hardware Hacking?
* Combining electronics and physical components with code
* Making real things and controlling them with software
---
# Hardware Hacking?
* Combining electronics and physical components with code
* Making real things and controlling them with software
* Building things with your hands
---
# Hardware Hacking?
* Combining electronics and physical components with code
* Making real things and controlling them with software
* Building things with your hands
* Joining the Maker Movement
---
# Why JavaScript?
---
# Why JavaScript?
* Hardware demands asynchronous software
---
# Why JavaScript?
* Hardware demands asynchronous software
* Huge and diverse community
---
# Why JavaScript?
* Hardware demands asynchronous software
* Huge and diverse community
* Lowering the barriers to entry
---
# Why yes, JavaScript!
* Hardware demands asynchronous software
* Huge and diverse community
* Lowering the barriers to entry
* JavaScript is the language of the web
---
# Internet of Things
---
# Internet of Things
* Bridging hardware devices and online services
---
# Internet of Things
* Bridging hardware devices and online services
* Treating hardware as an API
---
# Internet of Things
* Bridging hardware devices and online services
* Treating hardware as an API
* Interconnecting all kinds of hardware
---
# Internet of Things
* Bridging hardware devices and online services
* Treating hardware as an API
* Interconnecting all kinds of hardware
* Mashing up software and hardware
---
template: inverse
# Demo Driven Development
---
<iframe width='100%' id='slide21' height='500px' src="" frameborder="0" allowfullscreen></iframe>
???
http://localhost:5100/?end=4,2,3
---
# Makey Makey
![Makey Makey](/images/makey-makey.jpg)
---
![Makey Makey](/images/makery-diagram.png)
---
# Makey Makey
``` JS
keys = {
  87: 'W',
  65: 'A',
  83: 'S',
  68: 'D'
}

$(document).keydown(function (e) {
  console.log(keys[e.which])
});
```
---
template: inverse
# Emoji Fruit Piano
<h3>&nbsp;</h3>
---
template: inverse
# Emoji Fruit Piano
### Patent Pending
---
# Emoji Fruit Piano Demo
<div id="output"></div>
---
<iframe width='100%' height='500px' id='slide28' src="" frameborder="0" allowfullscreen></iframe>
???
http://localhost:5100/?end=5,7,6
---
# Spark Core
![Spark](/images/spark.jpg)
---
# Spark.io
* Open source microcontroller
* Arduino compatible
* Wifi enabled
* Cloud certified&reg;
---
template: inverse
# The Internet Connected Hat
<h3>&nbsp;</h3>
---
template: inverse
# The Internet Connected Hat
### Patent Pending
---
# Spark Core
![](/images/spark-circuit.png)
---
# Spark Core
`npm install sparky`
```js
var Sparky = require('sparky')

var core = new Sparky({
  deviceId: 'your device id',
  token: 'your access token',
})

core.digitalWrite('D7', 'HIGH');

core.digitalRead('D0', function(val){
  console.log(val)
});
```
---
# Demo
---
<iframe width='100%' height='500px' id='slide35' src="" frameborder="0" allowfullscreen></iframe>
???
http://localhost:5100/?end=10,9,8
---
# Arduino Uno
![](/images/arduino.png)
---
template: inverse
# Johnny Five
---
<img alt="johnny-five logo" class="fit" src="/images/johnny-five.png" />
---
template: inverse
# Johnny-Five is jQuery for robots
---
template: inverse
# Johnny-Five is jQuery for the <br> physical world
---
<div style="width:50%; float:left;">
<h1 id="johnny-five">Johnny-Five</h1>
  <ul>
    <li>Supports over 99 hardware devices</li>
    <li>Started by Rick Waldren now has over 61 Contributers</li>
    <li>Most active JavaScript Robot Community</li>
  </ul>
</div>
<div style="width:50%; float:left;">
  <img alt="johnny-five logo" style="padding-left: 60px;" src="/images/j5-library.gif" />
</div>
---
template: inverse
# "A blinking light is the hello world of robotics."
## -Sara Chipps

---
# Blink for Arduino

```c++
int led = 13;

// the setup routine runs once when you press reset:
void setup() {
  // initialize the digital pin as an output.
  pinMode(led, OUTPUT);
}

// the loop routine runs over and over again forever:
void loop() {
  digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(1000);               // wait for a second
  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW
  delay(1000);               // wait for a second
}

```
---
# Blink for Johnny Five

```js
var five = require("johnny-five");
var board = new five.Board();

// Connect to the arudino
board.on("ready", function() {
  // Create a new Led object on pin 13
  var led = new five.Led(13);
  led.blink(); // blink!
});
```
---
class: center
#Das Blinkenlights
![Arduino Blinking](/images/led-strobe.gif)
---

![](/images/ed209.jpg)

---
# ED 209

```js
var ED = require('johhny-five/eg/ed.js');

// Create a new Enforcer Droid
var ed209 = new ED({
  // assign servos
  right: { hip: 9, foot: 11 },
  left: { hip: 10, foot: 12 }
});

// Stand upright!
ed209.attn();

// Walk forward!
ed209.fwd();

// another Rick Waldron creation

```
---
class: center
#ED 209
![ED bot](/images/ed-walking.gif)
---
# Parrot AR Drone 2.0
![](/images/ardrone.jpg)
---
![](/images/labeled-ardrone.png)
---
# AR Drone

`npm install ar-drone`

```javascript
var arDrone = require('ar-drone');
var client = arDrone.createClient();

client.takeoff();

client
  .after(5000, function() {
    this.clockwise(0.5);
  })
  .after(3000, function() {
    this.animate('flipLeft', 15);
  })
  .after(1000, function() {
    this.stop();
    this.land();
  });
```
---
<img src="/images/black-hoodie.jpg" class="fit">
---
<img src="/images/hoodie-pattern.jpg" class="fit">
---
template: inverse
<h1>High-tech Observation &amp;<br /> Orientation Device Interaction Enabler</h1>
<h1>&nbsp;</h1>
<h3>&nbsp;</h3>
---
template: inverse
<h1>High-tech Observation &amp;<br /> Orientation Device Interaction Enabler</h1>
<h1>H.O.O.D.I.E</h1>
<h3>&nbsp;</h3>
---
template: inverse
<h1>High-tech Observation &amp;<br /> Orientation Device Interaction Enabler</h1>
<h1>H.O.O.D.I.E</h1>
<h3>Patent Pending</h3>
---
![](/images/hoodie.png)
---
![](/images/hoodie-circuit.png)
---
# H.O.O.D.I.E
```js
  // we're already connected to the drone and arduino
  var button = new five.Button(7);
  var leftYFlexSensor = new five.Sensor("A0");
  var rightYFlexSensor = new five.Sensor("A1");
  var leftZFlexSensor = new five.Sensor("A2");
  var rightZFlexSensor = new five.Sensor("A3");

  // push the button to turn on flying
  button.on("up", function() {
    toggleFlying();
  });

```
---
# H.O.O.D.I.E

```js
  // Map the flex sensors to both the drone and the VR simulation
  leftYFlexSensor.on("read", function(err, value){
    var a= five.Fn.map(value, 100, 500, -90, 90);
    leftY = five.Fn.constrain(a, -80, 80);
    io.sockets.emit('leftY', { angle: leftY, value: value });
    move();
  });

  rightZFlexSensor.on("read", function(err, value){
    var a = five.Fn.map(value, 500, 200, -60, 60);
    rightZ = five.Fn.constrain(a, -60, 60);
    io.sockets.emit('rightZ', { angle: rightZ, value: value });
    move();
  });
```

---
<iframe width='100%' id='slide46' height='600px' src="" frameborder="0" allowfullscreen></iframe>
???
http://localhost:5200/
---
# Wrapping up
* As web developers, you are in the perfect position for the future of internet connect devices.
---
# Wrapping up
* As web developers, you are in the perfect position for the future of internet connect devices.
* This new breed of hardware and software brings jQuery-like levels of accessibility to Hardware Hacking.
---
# Wrapping up
* As web developers, you are in the perfect position for the future of internet connect devices.
* This new breed of hardware and software brings jQuery-like levels of accessibility to Hardware Hacking.
* Making things with you hands is incredibly rewarding
---
template: inverse
#NodeBots
---
<img alt="nodebots logo" class="fit" src="/images/nodebot.png" />
---
# NodeBots
* Any robot controlled by Node.js (or JS in general)
* Coined by Chris Willams in "Rise of JS Robotics"
* Cool Logo
---
# NodeBots Events
* Chapters all over the world (4 countries, 6 cities)
* Reach out to Oli Zilla (@olizilla) about NodeBots London
* Start a new chapter near you with just a github pull request?
* Nodebots are better with friends
---
template: inverse
# NodeCopter
---
<img src="/images/nodecopter.png" class="fit">
---
# NodeCopter
* AR Drones controlled with nodejs
* Hackdays with flying robots
* Community event (affordable &amp; inclusive)
* Learning, sharing, fun and being nice to each other
---
template: inverse
#Get out the and start hacking!
---
template: inverse
# Thanks
### @teabass &nbsp;&nbsp; @reconbot
github.com/andrew/jquery-uk
    </textarea>
    <div id="piano"></div>

    <script src="jquery.min.js"></script>
    <script src="audio.js"></script>
    <script src="piano.js"></script>
    <script src="remark-latest.min.js" type="text/javascript"></script>
    <script src="emojify.js"></script>
    <script type="text/javascript">
      var slideshow = remark.create({
        ratio: '16:9',
        navigation: {
          scroll: false
        }
      });

      slideshow.on('afterShowSlide', function (slide) {
        if(slide.notes[0]){
          console.log("set iframe on slide " + slide.number);
          $('.remark-visible').find('iframe').attr('src', slide.notes[0]);
        } else {
          $('iframe').attr('src', '');
        }
      });

      var output = $('#output');
      var mapping = {
        76: ':apple:',  // L
        65: ':banana:', // A
        83: ':lemon:',  // S
        87: ':pear:',   // W
        68: ':watermelon:',  // D
        71: ':tangerine:' // G
      };
      var keys = {};
      var last = '';

      function update() {
        var pressedKeys = Object.keys(keys);
        var html = pressedKeys.map(function(e){ return emojify.replace(mapping[e]) }).join('');
        if(html != last){
          output.html(html);
          last = html;
        }
      }

      $(document).keydown(function (e) {
        keys[e.which] = true;
        update();
      });

      $(document).keyup(function (e) {
        delete keys[e.which];
        update();
      });

    </script>
  </body>
</html>
